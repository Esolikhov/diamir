from fastapi import FastAPI, Request
from config import VERIFY_TOKEN
from whatsapp_api import send_whatsapp_message, send_whatsapp_quick_reply, send_whatsapp_image
from telegram_api import send_to_telegram
from photo_ai_module import analyze_food_photo
from doctor_ai_module import ask_doctor_ai
from app3 import route_message_app3

app = FastAPI()
user_states = {}

PAGES = [
    [
        {"id": "cmd_vrach", "title": "üë©‚Äç‚öïÔ∏è –í—Ä–∞—á –≠–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥"},
        {"id": "cmd_support", "title": "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞"},
        {"id": "cmd_next_1", "title": "‚û°Ô∏è –ï—â—ë"},
    ],
    [
        {"id": "cmd_buy", "title": "üõçÔ∏è –ü–∞–∫–µ—Ç—ã –î–∏–∞–º–∏—Ä"},
        {"id": "cmd_back_0", "title": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"},
        {"id": "cmd_next_2", "title": "‚û°Ô∏è –ï—â—ë"},
    ],
    [
        {"id": "cmd_remind", "title": "üîî –ù–∞–ø–æ–º–Ω–∏—Ç—å –æ –ø—Ä–∏—ë–º–µ –î–∏–∞–º–∏—Ä–∞"},
        {"id": "cmd_back_1", "title": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"},
        {"id": "cmd_next_3", "title": "‚û°Ô∏è –ï—â—ë"},
    ],
    [
        {"id": "cmd_photo", "title": "üçΩÔ∏è –û—Ü–µ–Ω–∫–∞ –µ–¥—ã"},
        {"id": "cmd_back_2", "title": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"},
        {"id": "cmd_next_4", "title": "‚û°Ô∏è –ï—â—ë"},
    ],
    [
        {"id": "cmd_food", "title": "üçè –°–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é"},
        {"id": "cmd_back_3", "title": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"},
        {"id": "cmd_next_5", "title": "‚û°Ô∏è –ï—â—ë"},
    ],
    [
        {"id": "cmd_ban", "title": "üö´ –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã"},
        {"id": "cmd_back_4", "title": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"},
        {"id": "cmd_close", "title": "‚ùå –ó–∞–∫—Ä—ã—Ç—å"},
    ],
]

def show_menu(phone, page=0):
    page = max(0, min(page, len(PAGES) - 1))
    buttons = PAGES[page]
    send_whatsapp_quick_reply(phone, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", buttons)

@app.get("/webhook")
async def verify_webhook(request: Request):
    params = request.query_params
    if (
        params.get("hub.mode") == "subscribe"
        and params.get("hub.verify_token") == VERIFY_TOKEN
    ):
        return int(params.get("hub.challenge"))
    return "Verification failed"

@app.post("/webhook")
async def webhook_handler(request: Request):
    data = await request.json()
    try:
        entry = data.get("entry", [])[0]
        changes = entry.get("changes", [])[0]
        value = changes.get("value", {})
        messages = value.get("messages", [])
        if not messages:
            return {"status": "ok"}
        message = messages[0]
        phone = message["from"]

        # ==== –ö–ù–û–ü–ö–ò WhatsApp ====
        if message.get("type") == "interactive":
            btn_id = message["interactive"]["button_reply"]["id"]

            if btn_id.startswith("cmd_next_"):
                page = int(btn_id.split("_")[-1])
                show_menu(phone, page)
                return {"status": "ok"}
            if btn_id.startswith("cmd_back_"):
                page = int(btn_id.split("_")[-1])
                show_menu(phone, page)
                return {"status": "ok"}
            if btn_id == "cmd_close":
                send_whatsapp_message(phone, "–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ. –ï—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ /start.")
                return {"status": "ok"}
            if btn_id == "cmd_vrach":
                user_states[phone] = {"doctor_mode": True}
                send_whatsapp_message(phone, "–í—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –≤—Ä–∞—á—É-—ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥—É. –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.")
                return {"status": "ok"}
            if btn_id == "cmd_support":
                user_states[phone] = {"support_mode": True}
                send_whatsapp_message(phone, "–í—ã –≤ —á–∞—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏! –û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å. –ß—Ç–æ–±—ã –≤—ã–π—Ç–∏, –Ω–∞–ø–∏—à–∏—Ç–µ '–∑–∞–∫—Ä—ã—Ç—å'.")
                return {"status": "ok"}
            if btn_id == "cmd_buy":
                img_url = "https://files.catbox.moe/a3ta98.png"
                send_whatsapp_image(phone, img_url, caption="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç: —Å—Ç–∞—Ä—Ç–æ–≤—ã–π, –ø—Ä–µ–º–∏—É–º –∏–ª–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–π. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞.")
                user_states[phone] = {"buy_mode": True}
                return {"status": "ok"}
            if btn_id == "cmd_remind":
                send_whatsapp_message(phone, "–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! (—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–π worker)")
                show_menu(phone, 2)
                return {"status": "ok"}
            if btn_id == "cmd_photo":
                user_states[phone] = {"photo_mode": True}
                send_whatsapp_message(phone, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –µ–¥—ã (–∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ). –Ø –¥–∞–º –ø–æ–¥—Ä–æ–±–Ω—É—é –æ—Ü–µ–Ω–∫—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤.")
                return {"status": "ok"}
            if btn_id == "cmd_food":
                send_whatsapp_message(phone, "–°–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é: –≤—ã–±–∏—Ä–∞–π—Ç–µ –±–µ–ª–∫–∏, —Å–ª–æ–∂–Ω—ã–µ —É–≥–ª–µ–≤–æ–¥—ã, –±–æ–ª—å—à–µ –æ–≤–æ—â–µ–π, –º–∏–Ω–∏–º—É–º —Å–∞—Ö–∞—Ä–∞ –∏ –±—ã—Å—Ç—Ä—ã—Ö —É–≥–ª–µ–≤–æ–¥–æ–≤.")
                show_menu(phone, 4)
                return {"status": "ok"}
            if btn_id == "cmd_ban":
                send_whatsapp_message(phone, "üö´ –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã: —Å–∞—Ö–∞—Ä, –≤—ã–ø–µ—á–∫–∞, —Å–ª–∞–¥–æ—Å—Ç–∏, –∂–∏—Ä–Ω–æ–µ –º—è—Å–æ –∏ —Ç.–¥.")
                show_menu(phone, 5)
                return {"status": "ok"}
            show_menu(phone, 0)
            return {"status": "ok"}

        # ==== 2. –ü–û–î–î–ï–†–ñ–ö–ê ====
        state = user_states.get(phone, {})
        if state.get("support_mode"):
            text = message.get("text", {}).get("body", "").strip()
            if text.lower() == "–∑–∞–∫—Ä—ã—Ç—å":
                user_states.pop(phone, None)
                send_whatsapp_message(phone, "–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∑–∞–∫—Ä—ã—Ç. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞—Å –≤ –º–µ–Ω—é.")
                show_menu(phone, 0)
                return {"status": "ok"}
            send_to_telegram(text, phone)
            send_whatsapp_message(phone, "–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
            return {"status": "ok"}

        # ==== 3. –í–†–ê–ß (–ò–ò-—ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥) ====
        if state.get("doctor_mode"):
            text = message.get("text", {}).get("body", "").strip()
            if text.lower() == "–∑–∞–∫—Ä—ã—Ç—å":
                user_states.pop(phone, None)
                send_whatsapp_message(phone, "–ß–∞—Ç —Å –≤—Ä–∞—á–æ–º –∑–∞–∫—Ä—ã—Ç. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞—Å –≤ –º–µ–Ω—é.")
                show_menu(phone, 0)
                return {"status": "ok"}
            answer = ask_doctor_ai(text, phone)
            send_whatsapp_message(phone, f"–û—Ç–≤–µ—Ç –≤—Ä–∞—á–∞: {answer}\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥ ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ '–∑–∞–∫—Ä—ã—Ç—å'.")
            return {"status": "ok"}

        # --- –û—Å—Ç–∞–ª—å–Ω–æ–µ: –ø–µ—Ä–µ–¥–∞—ë–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ app3 ---
        return await route_message_app3(message, phone, user_states, show_menu)

    except Exception as e:
        print("== –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ==", e)
        return {"status": "error", "detail": str(e)}
